;Simple primitives
(byte hello-byte 4)               ; Define a variable of type byte
(int hello-int 3)                ; Int
(float hello-float 4.4)            ; Float
(string hello-str "Hello world") ; String
(bool hello-bool true)            ; Boolean
(char hello-char h)               ; Char

; More complex primitives
(regex hello-regex /myregex/i)     ; Regex

; Define tuple before usage
(tuple hello-tuple (int string))
(hello-tuple my-tuple (9 "Hello world"))

; TODO: Named tuples

; Define array type before use
(array int-array int)
(int-array hello-ints (3 54 6 4))

; TODO: Associative arrays
; 

; Declare block
(block hello (expr a b))

; Define a function type that returns a byte based on two bytes input
(function tripple-byte-function (byte byte byte))

; Define a function of the previously defined type 'tripple-byte-function'
(tripple-byte-function my-add ((a b)
  (block entry
    (sub a b))))

; Define a function type that returns a byte with no input
(function single-byte-function (byte))

; Define a function of the previously defined type 'single-byte-function'
(single-byte-function main (()
  (block entry
    (my-add 3 4))))
