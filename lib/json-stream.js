// Generated by CoffeeScript 1.10.0
(function() {
  var ParseStream, StringifyStream, _, stream,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require("lodash");

  stream = require("stream");

  StringifyStream = (function(superClass) {
    extend(StringifyStream, superClass);

    function StringifyStream(prettyprint) {
      this.prettyprint = prettyprint;
      StringifyStream.__super__.constructor.call(this, {
        objectMode: true
      });
    }

    StringifyStream.prototype._transform = function(obj, enc, next) {
      var jasonstr;
      jasonstr = this.prettyprint ? JSON.stringify(obj, null, 2) : JSON.stringify(obj);
      this.push(jasonstr + "\n");
      return next();
    };

    return StringifyStream;

  })(stream.Transform);

  ParseStream = (function(superClass) {
    extend(ParseStream, superClass);

    function ParseStream() {
      ParseStream.__super__.constructor.call(this, {
        objectMode: true
      });
    }

    ParseStream.prototype._transform = function(obj, enc, next) {
      _.chain(obj.toString().split('\n')).dropRight().map(function(line) {
        return JSON.parse(line);
      }).map((function(_this) {
        return function(obj) {
          return _this.push(obj);
        };
      })(this)).value();
      return next();
    };

    return ParseStream;

  })(stream.Transform);

  exports.Stringify = StringifyStream;

  exports.Parse = ParseStream;

}).call(this);
